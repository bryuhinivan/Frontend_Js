/* Задано неотрицательное целое число, например 3, вернуть строку с бормотанием: "1 овца...2 овцы...3 овцы...". Ввод всегда будет допустимым, т. е. отрицательных целых чисел не будет. */

function countSheep (number) {
  // Создаём массив строк
  const sheepArray = Array.from({ length: number }, (_, index) => {
    const number = index + 1;
    let suffix = 'овец'; // По умолчанию для чисел, оканчивающихся на 5-9, 0
    if (number % 10 === 1 && number % 100 !== 11) {
      suffix = 'овца';
    } else if ([2, 3, 4].includes(number % 10) && ![12, 13, 14].includes(number % 100)) {
      suffix = 'овцы';
    }
    return `${number} ${suffix}`;
  });
    // Объединяем элементы массива в строку с разделителем "..."
    return sheepArray.join('...') + '...';
}

const a = 77;
console.log(countSheep(a));

// Используется метод Array.from, чтобы создать массив длиной number.
// { length: number }: Создается объект с длиной number, который имитирует массиво-подобный объект.
// Второй аргумент Array.from — это функция-маппер, которая вызывается для каждого элемента массива.
// (_, index): Функция-маппер принимает два аргумента:
// _ — текущий элемент (не используется, поэтому заменен на _).
// index — индекс текущего элемента (начинается с 0).
// const number = index + 1: Преобразуем индекс в число, начиная с 1.
// Логика выбора суффикса:
// Если число оканчивается на 1 (но не 11), используется суффикс "овца".
// Если число оканчивается на 2, 3, 4 (но не 12, 13, 14), используется суффикс "овцы".
// Во всех остальных случаях используется суффикс "овец".
// return number{suffix}``: Возвращается строка вида "1 овца", "2 овцы", "3 овцы" и т.д.
// Объединение массива в строку
// Используется метод join, чтобы объединить элементы массива в одну строку, разделяя их троеточием (...).
// В конце добавляется еще одно троеточие, чтобы завершить строку.