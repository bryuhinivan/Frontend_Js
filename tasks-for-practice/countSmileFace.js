/* Если в качестве аргумента указан массив (arr), завершите функцию countSmileys, которая должна возвращать общее количество улыбающихся лиц.

Правила для улыбающегося лица:

Каждый смайлик должен содержать допустимую пару глаз. Глаза могут быть помечены как : или ;
Смайлик может иметь нос, но не обязательно. Допустимые символы для носа: - или ~
Каждое улыбающееся лицо должно иметь улыбающийся рот, который должен быть помечен как ) или D
Никакие дополнительные символы, кроме упомянутых, не допускаются.

Допустимые примеры смайликов: :) :D ;-D :~)
Недопустимые смайлики: ;( :> :} :]

Пример
countSmileys([':)', ';(', ';}', ':-D']); // должно возвращать 2;
countSmileys([';D', ':-(', ':-)', ';~)']); // должно вернуть 3;
countSmileys([';]', ':[', ';*', ':$', ';-D']); // должно вернуть 1;
Примечание
В случае пустого массива верните 0. Вы не будете проходить тестирование с недопустимыми входными данными (входные данные всегда будут массивом). Порядок элементов лица (глаза, нос, рот) всегда будет одинаковым. */

function countSmileys(arr) {
  if (!arr || arr.length === 0) return 0;
  
  // Регулярное выражение для проверки смайликов:
  // ^ - начало строки
  // [:;] - допустимые глаза (либо :, либо ;)
  // [-~]? - необязательный нос (либо -, либо ~)
  // [)D] - допустимый рот (либо ), либо D)
  // $ - конец строки
  const smileyPattern = /^[:;][-~]?[)D]$/;
  
  return arr.filter(face => smileyPattern.test(face)).length;
}

// Тестовые случаи
console.log(countSmileys([':)', ';(', ';}', ':-D'])); // 2
console.log(countSmileys([';D', ':-(', ':-)', ';~)'])); // 3
console.log(countSmileys([';]', ':[', ';*', ':$', ';-D'])); // 1
console.log(countSmileys([])); // 0